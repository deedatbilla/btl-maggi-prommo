{"version":3,"sources":["components/wheel/index.js","MainPage.js","SuccessPage.js","components/SelectRegionPage.js","App.js","serviceWorker.js","index.js"],"names":["Wheel","React","Component","constructor","props","super","onChange","e","this","setState","target","name","value","output","showform","modalIsOpen","onSubmit","a","preventDefault","loading","state","fname","lname","phone","prize","location","gender","outletname","userdata","age","recNo","p","package_id","region","console","log","axios","post","resSMS","data","history","push","handleClose","modal","Modal","show","className","Header","id","style","color","fontWeight","Body","htmlFor","type","required","Footer","selectedItem","selectItem","bind","items","length","Math","floor","random","onSelectItem","setTimeout","alert","render","wheelVars","spinning","onClick","map","item","index","key","class","won","marginTop","MainPage","left","componentDidMount","r","match","params","reg","includes","replace","response","packages","left_packages","won_packages","message","SuccessPage","to","fontSize","SelectRegionPage","regions","get","resp","App","exact","path","component","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"qTAae,MAAMA,UAAcC,IAAMC,UACvCC,YAAYC,GAAQ,IAAD,EACjBC,MAAMD,GADW,YAmBnBE,SAAYC,GAAMC,KAAKC,SAAS,CAAE,CAACF,EAAEG,OAAOC,MAAOJ,EAAEG,OAAOE,QAnBzC,KAoBnBC,OAAS,KACPL,KAAKC,SAAS,CAAEK,UAAU,EAAMC,aAAa,KArB5B,KAwBnBC,SAxBmB,uCAwBR,WAAOT,GAAP,iCAAAU,EAAA,6DACTV,EAAEW,iBACF,EAAKT,SAAS,CAAEU,SAAS,IAFhB,WAI4D,EAAKC,MAAhEC,EAJD,EAICA,MAAOC,EAJR,EAIQA,MAAOC,EAJf,EAIeA,MAAOC,EAJtB,EAIsBA,MAAOC,EAJ7B,EAI6BA,SAASC,EAJtC,EAIsCA,OAAOC,EAJ7C,EAI6CA,WAC9CC,EAAW,CACfP,QACAC,QACAO,IAAI,IACJC,MAAOP,EACPQ,EAAGP,EAAMb,KACTe,SACAM,WAAYR,EAAMQ,WAAa,GAC/BP,WACAQ,OAAQ,EAAK7B,MAAM6B,OACnBN,cAEFO,QAAQC,IAAIP,GAjBL,SAkBcQ,IAAMC,KAnDlB,uDAmD+BT,GAlBjC,OAkBDU,EAlBC,OAmBPJ,QAAQC,IAAIG,EAAOC,MAInB,EAAK9B,SAAS,CAAEU,SAAS,IACzB,EAAKf,MAAMoC,QAAQC,KAAnB,mBAAoCjB,EAAMb,OAxBnC,kDA0BPuB,QAAQC,IAAR,MAEA,EAAK1B,SAAS,CAAEU,SAAS,IA5BlB,0DAxBQ,2DAyDnBuB,YAAc,KACZlC,KAAKC,SAAS,CAAEM,aAAa,KA1DZ,KA4DnB4B,MAAQ,KAAO,MAAD,EAC6DnC,KAAKY,MAAtEC,EADI,EACJA,MAAOC,EADH,EACGA,MAAOC,EADV,EACUA,MAAOE,EADjB,EACiBA,SAAUV,EAD3B,EAC2BA,YAAYW,EADvC,EACuCA,OAAOC,EAD9C,EAC8CA,WAE1D,OACE,kBAACiB,EAAA,EAAD,CAAOC,KAAM9B,GACX,0BAAMC,SAAUR,KAAKQ,SAAU8B,UAAU,IACvC,kBAACF,EAAA,EAAMG,OAAP,KACE,wBAAID,UAAU,cAAcE,GAAG,oBAAoBC,MAAO,CAAEC,MAAO,UAAnE,mCACkC,uBAAGD,MAAO,CAAEC,MAAO,MAAOC,WAAY,SAAW3C,KAAKY,MAAMI,MAAMb,MADpG,8CAMF,kBAACiC,EAAA,EAAMQ,KAAP,KACE,yBAAKN,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,cACb,2BAAOO,QAAQ,WAAWP,UAAU,kBAApC,eAGA,2BACEE,GAAG,WACHpC,MAAOS,EACPf,SAAUE,KAAKF,SACfK,KAAK,QACL2C,KAAK,OACLC,UAAQ,EACRT,UAAU,mBAIhB,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,cACb,2BAAOO,QAAQ,WAAWP,UAAU,kBAApC,cAGA,2BACEE,GAAG,WACHpC,MAAOU,EACPhB,SAAUE,KAAKF,SACfK,KAAK,QACL4C,UAAQ,EACRD,KAAK,OACLR,UAAU,mBAIhB,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,cACb,2BAAOO,QAAQ,WAAWP,UAAU,kBAApC,gBAGA,2BACEE,GAAG,WACHpC,MAAOW,EACPjB,SAAUE,KAAKF,SACfK,KAAK,QACL4C,UAAQ,EAGRD,KAAK,SACLR,UAAU,oBAUlB,yBAAKA,UAAU,OAiBb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,2BAAOO,QAAQ,YAAYP,UAAU,kBAArC,aAGA,2BACEE,GAAG,YACHpC,MAAOa,EACPnB,SAAUE,KAAKF,SACfK,KAAK,WACL4C,UAAQ,EACRD,KAAK,OACLR,UAAU,mBAIhB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,2BAAOO,QAAQ,YAAYP,UAAU,kBAArC,UAGA,4BAAQlC,MAAOc,EAAQpB,SAAUE,KAAKF,SAAUK,KAAK,SAAS4C,UAAQ,EAACT,UAAU,gBAC/E,4BAAQlC,MAAM,IAAd,uBACA,4BAAQA,MAAO,QAAf,QACA,4BAAQA,MAAO,UAAf,cAMR,yBAAKkC,UAAU,OAEb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,2BAAOO,QAAQ,YAAYP,UAAU,kBAArC,eAGA,2BACEE,GAAG,YACHpC,MAAOe,EACPrB,SAAUE,KAAKF,SACfK,KAAK,aACL4C,UAAQ,EACRD,KAAK,OACLR,UAAU,oBAOlB,yBAAKA,UAAU,UAGnB,kBAACF,EAAA,EAAMY,OAAP,KAKE,4BAAQR,GAAG,oBAAoBM,KAAK,SAASR,UAAU,mBACpDtC,KAAKY,MAAMD,QAAU,yCAAuB,oDA/MvDX,KAAKY,MAAQ,CACXqC,aAAc,KACd3C,UAAU,EACVQ,MAAO,GACPD,MAAO,GACPE,MAAO,GACPM,IAAK,GACLJ,SAAU,GACVD,MAAO,GACPL,SAAS,EACTJ,aAAa,EACbW,OAAO,GACPC,WAAW,IAEbnB,KAAKkD,WAAalD,KAAKkD,WAAWC,KAAKnD,MAwMnCkD,aAAc,IAAD,6HACb,EAAKtD,MAAMwD,MAAMC,OAAS,GADb,oBAEiB,OAA5B,EAAKzC,MAAMqC,aAFA,oBAGPA,EAAeK,KAAKC,MAAMD,KAAKE,SAAW,EAAK5D,MAAMwD,MAAMC,SAC7D,EAAKzD,MAAM6D,aAJF,gCAKL,EAAK7D,MAAM6D,aAAaR,GALnB,OAOb,EAAKhD,SAAS,CAAEgD,eAAcjC,MAAO,EAAKpB,MAAMwD,MAAMH,KACtDS,WAAW,EAAKrD,OAAQ,KARX,wBAUb,EAAKJ,SAAS,CAAEgD,aAAc,OAC9BS,WAAW,EAAKR,WAAY,KAXf,gCAefS,MAAM,+BAfS,8CAmBnBC,SAAU,MACAX,EAAiBjD,KAAKY,MAAtBqC,aACAG,EAAUpD,KAAKJ,MAAfwD,MAEFS,EAAY,CAChB,YAAaT,EAAMC,OACnB,kBAAmBJ,GAEfa,EAA4B,OAAjBb,EAAwB,WAAa,GACtD,OAAqB,IAAjBG,EAAMC,OAEN,yBAAKf,UAAU,cACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,GAAGG,MAAO,CAAEC,MAAO,WAAjC,yBAOJ,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAS,gBAAWwB,GAAYrB,MAAOoB,EAAWE,QAAS/D,KAAKkD,YAClEE,EAAMY,IAAI,CAACC,EAAMC,IAChB,yBAAK5B,UAAU,aAAa6B,IAAKD,EAAOzB,MAAO,CAAE,YAAayB,IAC3DD,EAAK9D,UAMhB,yBAAKmC,UAAU,OACZtC,KAAKmC,SAGR,yBAAKG,UAAU,aACb,yBAAKA,UAAU,sBACb,wBAAIG,MAAO,CAAEC,MAAO,WAApB,eACA,yBAAKJ,UAAU,QACb,2BAAO8B,MAAM,SACX,+BACE,4BACE,iCACA,uCAGJ,+BACGpE,KAAKJ,MAAMyE,IAAIL,IAAI,CAACjC,EAAMmC,IACzB,4BACE,4BAAKA,EAAQ,GACb,4BAAKnC,EAAK5B,cAY1B,yBAAKmC,UAAU,cACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,GAAGG,MAAO,CAAEC,MAAO,SAAU4B,UAAW,UAAtD,kDAMJ,yBAAKhC,UAAU,aACb,yBAAKA,UAAU,sBACb,wBAAIG,MAAO,CAAEC,MAAO,WAApB,eACA,yBAAKJ,UAAU,QACb,2BAAO8B,MAAM,SACX,+BACE,4BACE,iCACA,uCAGJ,+BACGpE,KAAKJ,MAAMyE,IAAIL,IAAI,CAACjC,EAAMmC,IACzB,4BACE,4BAAKA,EAAQ,GACb,4BAAKnC,EAAK5B,e,MC5UnB,MAAMoE,UAAiB9E,IAAMC,UAAW,eAAD,oBAepDkB,MAAQ,CACNyD,IAAK,GACLG,KAAM,IAGFC,oBAAqB,IAAD,qIAEpBC,EAAI,EAAK9E,MAAM+E,MAAMC,OAAOnD,OAE9BoD,EADEH,EAAEI,SAAS,KACPJ,EAAEK,QAAQ,IAAK,KAEfL,EANgB,kBASC9C,IAAMC,KAAK,qDAAsD,CACtFJ,OAAQoD,IAVY,OAShBG,EATgB,OAYhBjD,EAAOiD,EAASjD,KACtBL,QAAQC,IAAII,GACZL,QAAQC,IAAII,EAAKkD,UAEjB,EAAKhF,SAAS,CAAEuE,KAAM,IAAIzC,EAAKmD,iBAG/B,EAAKjF,SAAS,CAAEoE,IAAK,IAAItC,EAAKoD,gBAnBR,kDAsBtBzD,QAAQC,IAAI,KAAMyD,SAtBI,4DA0B1BxB,SACE,OACE,yBAAKtB,UAAU,OACb,kBAAC,EAAD,CACEc,MAAOpD,KAAKY,MAAM4D,KAClB/C,OAAQzB,KAAKJ,MAAM+E,MAAMC,OAAOnD,OAChC4C,IAAKrE,KAAKY,MAAMyD,IAChBrC,QAAShC,KAAKJ,MAAMoC,Y,YCtDf,MAAMqD,UAAoB3F,YACvCkE,SACE,OACE,yBAAKtB,UAAU,IACb,yBAAKA,UAAU,oCACb,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMgD,GAAG,KACP,uBAAGhD,UAAU,eADf,WAMN,wBAAIG,MAAO,CAACC,MAAM,WAAlB,iCACiC,IAC/B,uBAAGD,MAAO,CAAEC,MAAO,MAAOC,WAAY,OAAQ4C,SAAU,SAAWvF,KAAKJ,MAAM+E,MAAMC,OAAOX,MAAU,OCf/G,MAAMuB,UAAyB9F,YAAW,eAAD,oBACvCkB,MAAQ,CACNa,OAAQ,GACRgE,QAAQ,IAH6B,KAKvCjF,SAAUT,IACQC,KAAKJ,MAAdoC,QAECC,KAAR,gBAAsBjC,KAAKY,MAAMa,UARI,KAevC3B,SAAWC,GAAKC,KAAKC,SAAS,CAAE,CAACF,EAAEG,OAAOC,MAAOJ,EAAEG,OAAOE,QALpDqE,oBAAoB,IAAD,wIACN7C,IAAM8D,IAAI,oDADJ,OACjBC,EADiB,OAEvBjE,QAAQC,IAAIgE,EAAK5D,MACjB,EAAK9B,SAAS,CAACwF,QAAQ,IAAIE,EAAK5D,QAHT,6CAMzB6B,SAEE,OACE,yBAAKtB,UAAU,iBACb,0BAAM9B,SAAUR,KAAKQ,UAEnB,yBAAK8B,UAAU,cAEb,2BAAOO,QAAQ,gBAAgBJ,MAAO,CAACC,MAAM,QAAQ,kDACrD,4BAASvC,KAAK,SAAS4C,UAAQ,EAACjD,SAAUE,KAAKF,SAAUsE,MAAM,gBAC7D,4BAAQhE,MAAM,IAAd,wBACCJ,KAAKY,MAAM6E,QAAQzB,IAAIjC,GACxB,4BAAS3B,MAAO2B,EAAK+C,SAAS,KAAK/C,EAAKgD,QAAQ,IAAI,KAAKhD,GAAOA,KAIpE,4BAAQe,KAAK,SAASR,UAAU,wBAAhC,cAaKkD,Q,OC1CA,MAAMI,UAAYnG,IAAMC,UAGrCkE,SACE,OAEG,kBAAC,IAAD,KACC,yBAAKtB,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuD,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,iBAAiBC,UAAWxB,IAC9C,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,iBAAiBC,UAAWV,QCLtCW,QACW,cAA7BC,OAAOhF,SAASiF,UAEe,UAA7BD,OAAOhF,SAASiF,UAEhBD,OAAOhF,SAASiF,SAASvB,MACvB,2DCbNwB,IAASvC,OACP,kBAAC,IAAMwC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAKC,IACJA,EAAaC,eAEdC,MAAMC,IACLpF,QAAQoF,MAAMA,EAAM1B,a","file":"static/js/main.11edb8a0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\nimport axios from \"axios\";\n// import Button from \"react-bootstrap/Button\";\nimport { Modal } from \"react-bootstrap\";\nconst smsurl = \"https://skrillergh.pythonanywhere.com/checkwinnings/\";\n//+233508305891\n// const customStyles = {\n//   content: {\n//     zIndex: \"5\",\n//     transform: \"translate(0%, 0%)\",\n//   },\n// };\nexport default class Wheel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItem: null,\n      showform: false,\n      lname: \"\",\n      fname: \"\",\n      phone: \"\",\n      age: \"\",\n      location: \"\",\n      prize: \"\",\n      loading: false,\n      modalIsOpen: false,\n      gender:'',\n      outletname:\"\"\n    };\n    this.selectItem = this.selectItem.bind(this);\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n  output = () => {\n    this.setState({ showform: true, modalIsOpen: true });\n    // console.log(this.state.prize);\n  };\n  onSubmit = async (e) => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    try {\n      const { fname, lname, phone, prize, location,gender,outletname } = this.state;\n      const userdata = {\n        fname,\n        lname,\n        age:\"0\",\n        recNo: phone,\n        p: prize.name,\n        gender,\n        package_id: prize.package_id + \"\",\n        location,\n        region: this.props.region,\n        outletname\n      };\n      console.log(userdata);\n      const resSMS = await axios.post(smsurl, userdata);\n      console.log(resSMS.data);\n      // const resEmail = await axios.post(emailUrl, userdata);\n      //console.log(resEmail.data);\n\n      this.setState({ loading: false });\n      this.props.history.push(`/success/${prize.name}`);\n    } catch (error) {\n      console.log(error);\n\n      this.setState({ loading: false });\n      // console.log(this.props.history);\n    }\n  };\n\n  handleClose = () => {\n    this.setState({ modalIsOpen: false });\n  };\n  modal = () => {\n    const { fname, lname, phone, location, modalIsOpen,gender,outletname } = this.state;\n\n    return (\n      <Modal show={modalIsOpen}>\n        <form onSubmit={this.onSubmit} className=\"\">\n          <Modal.Header>\n            <h5 className=\"modal-title\" id=\"addOwnerModalText\" style={{ color: \"black\" }}>\n              Congratulations on winning your <b style={{ color: \"red\", fontWeight: \"bold\" }}>{this.state.prize.name}</b>. fill\n              the form below to claim your prize\n            </h5>\n          </Modal.Header>\n\n          <Modal.Body>\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-4 col-sm-4 col-xs-4\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"inputOne\" className=\"col-form-label\">\n                      First Name:\n                    </label>\n                    <input\n                      id=\"inputOne\"\n                      value={fname}\n                      onChange={this.onChange}\n                      name=\"fname\"\n                      type=\"text\"\n                      required\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-4 col-sm-4 col-xs-4\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"inputOne\" className=\"col-form-label\">\n                      Last Name:\n                    </label>\n                    <input\n                      id=\"inputOne\"\n                      value={lname}\n                      onChange={this.onChange}\n                      name=\"lname\"\n                      required\n                      type=\"text\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-4 col-sm-4 col-xs-4\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"inputTwo\" className=\"col-form-label\">\n                      Phone Number\n                    </label>\n                    <input\n                      id=\"inputTwo\"\n                      value={phone}\n                      onChange={this.onChange}\n                      name=\"phone\"\n                      required\n                      \n                      \n                      type=\"number\"\n                      className=\"form-control\"\n                    />\n                  </div>\n\n                  \n                </div>\n\n\n              </div>\n\n              <div className=\"row\">\n                {/* <div className=\"col\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"inputThree\" className=\"col-form-label\">\n                      Age\n                    </label>\n                    <input\n                      id=\"inputThree\"\n                      value={age}\n                      onChange={this.onChange}\n                      name=\"age\"\n                      type=\"text\"\n                      required\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div> */}\n                <div className=\"col\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"inputFour\" className=\"col-form-label\">\n                      Location:\n                    </label>\n                    <input\n                      id=\"inputFour\"\n                      value={location}\n                      onChange={this.onChange}\n                      name=\"location\"\n                      required\n                      type=\"text\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n                <div className=\"col\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"inputFour\" className=\"col-form-label\">\n                      Gender\n                    </label>\n                    <select value={gender} onChange={this.onChange} name=\"gender\" required className=\"form-control\">\n                      <option value=\"\">---Select gender---</option>\n                      <option value={\"male\"}>Male</option>\n                      <option value={\"female\"}>Female</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n               \n                <div className=\"col\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"inputFour\" className=\"col-form-label\">\n                      Outlet name\n                    </label>\n                    <input\n                      id=\"inputFour\"\n                      value={outletname}\n                      onChange={this.onChange}\n                      name=\"outletname\"\n                      required\n                      type=\"text\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n             \n              </div>\n\n              <div className=\"row\"></div>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            {/* <Button variant=\"secondary\" onClick={this.handleClose}>\n                Close\n              </Button> */}\n\n            <button id=\"performSendAction\" type=\"submit\" className=\"btn btn-primary\">\n              {this.state.loading ? <span>loading</span> : <span> Submit Claim</span>}\n            </button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n    );\n  };\n  async selectItem() {\n    if (this.props.items.length > 0) {\n      if (this.state.selectedItem === null) {\n        const selectedItem = Math.floor(Math.random() * this.props.items.length);\n        if (this.props.onSelectItem) {\n          await this.props.onSelectItem(selectedItem);\n        }\n        this.setState({ selectedItem, prize: this.props.items[selectedItem] });\n        setTimeout(this.output, 4000);\n      } else {\n        this.setState({ selectedItem: null });\n        setTimeout(this.selectItem, 500);\n        //console.log(this.state.selectedItem)\n      }\n    } else {\n      alert(\"there is no prize to be won\");\n    }\n  }\n\n  render() {\n    const { selectedItem } = this.state;\n    const { items } = this.props;\n\n    const wheelVars = {\n      \"--nb-item\": items.length,\n      \"--selected-item\": selectedItem,\n    };\n    const spinning = selectedItem !== null ? \"spinning\" : \"\";\n    if (items.length !== 0) {\n      return (\n        <div className=\"container \">\n          <div className=\"row\">\n            <div className=\"col-md-12 text-center\">\n              <h3 className=\"\" style={{ color: \"purple\" }}>\n                {/* WIN YOUR MAGGI PROMOTION PRIZE HERE */}\n                WIN YOUR PRIZE HERE\n              </h3>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"wheel-container\">\n              <div className={`wheel ${spinning}`} style={wheelVars} onClick={this.selectItem}>\n                {items.map((item, index) => (\n                  <div className=\"wheel-item\" key={index} style={{ \"--item-nb\": index }}>\n                    {item.name}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            {this.modal()}\n            {/* <div className=\"col-sm-4\">{this.state.showform ? this.form() : null}</div> */}\n          </div>\n          <div className=\"row mb-4 \">\n            <div className=\"col-12 text-center\">\n              <h3 style={{ color: \"purple\" }}> Prizes won</h3>\n              <div className=\"card\">\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Prize</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.props.won.map((data, index) => (\n                      <tr>\n                        <td>{index + 1}</td>\n                        <td>{data.name}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"container \">\n          <div className=\"row\">\n            <div className=\"col-md-12 text-center\">\n              <h1 className=\"\" style={{ color: \"purple\", marginTop: \"100px\" }}>\n                There is no ongoing promotion in this region\n              </h1>\n            </div>\n          </div>\n\n          <div className=\"row mb-4 \">\n            <div className=\"col-12 text-center\">\n              <h3 style={{ color: \"purple\" }}> Prizes won</h3>\n              <div className=\"card\">\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Prize</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.props.won.map((data, index) => (\n                      <tr>\n                        <td>{index + 1}</td>\n                        <td>{data.name}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport Wheel from \"./components/wheel\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nexport default class MainPage extends React.Component {\n  // constructor() {\n  //   super();\n  //   this.places = [\n  //     \"Plastic Laddles (rice spoon)\",\n  //     \"Plastic Laddles (Passoire Beignet)\",\n  //     \"ASSIETTE GARBA(Fufu bowl)\",\n  //     \"Double Bowl \",\n  //     \"Plate \",\n  //     \"Cup\",\n  //     \"GARBA PLATE + COUV (Compartment Food Storage)\",\n  //     \"CASSEROLE 3 L\",\n  //     \"BASSINE FOOTED BOL 50\",\n  //   ];\n  // }\n  state = {\n    won: [],\n    left: [],\n    // region:''\n  };\n  async componentDidMount() {\n    let reg;\n    let r = this.props.match.params.region;\n    if (r.includes(\" \")) {\n      reg = r.replace(\" \", \"/\");\n    } else {\n      reg = r;\n    }\n    try {\n      const response = await axios.post(\"https://skrillergh.pythonanywhere.com/allpackages/\", {\n        region: reg,\n      });\n      const data = response.data;\n      console.log(data);\n      console.log(data.packages);\n\n      this.setState({ left: [...data.left_packages] });\n\n      // data.won_packages.forEach((element) => {\n      this.setState({ won: [...data.won_packages] });\n      // });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Wheel\n          items={this.state.left}\n          region={this.props.match.params.region}\n          won={this.state.won}\n          history={this.props.history}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class SuccessPage extends Component {\n  render() {\n    return (\n      <div className=\"\">\n        <nav className=\"navbar navbar-expand-sm bg-light\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-link\">\n              <Link to=\"/\">\n                <i className=\"fa fa-home\"></i>Home\n              </Link>\n            </li>\n          </ul>\n        </nav>\n        <h3 style={{color:\"purple\"}}>\n          Congratulations You have won a{\" \"}\n          <b style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"30px\" }}>{this.props.match.params.item}</b>{\" \"}\n        </h3>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from 'axios';\n// const api_url=\"https://skrillergh.pythonanywhere.com/checkwinnings/\"\nclass SelectRegionPage extends Component {\n  state = {\n    region: \"\",\n    regions:[]\n  };\n  onSubmit=(e)=>{\n    const {history}=this.props\n\n    history.push(`wheel/${this.state.region}`)\n  }\n  async componentDidMount(){\n    const resp=await axios.get(\"https://skrillergh.pythonanywhere.com/getregions\");\n    console.log(resp.data)\n    this.setState({regions:[...resp.data]})\n  }\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  render() {\n    // const { region } = this.state;\n    return (\n      <div className=\"container p-4\">\n        <form onSubmit={this.onSubmit}>\n        \n          <div className=\"form-group\">\n          {/* <div className=\"row\"> */}\n            <label htmlFor=\"Template type\" style={{color:\"red\"}}><b>Select your region</b></label>\n            <select  name=\"region\" required onChange={this.onChange} class=\"form-control\">\n              <option value=\"\">---select region ---</option>\n              {this.state.regions.map(data=>(\n              <option  value={data.includes(\"/\")?data.replace(\"/\",\" \"):data}>{data}</option>\n              ))}\n            </select>\n           \n          <button type=\"submit\" className=\"btn btn-primary mt-5\">\n            Submit\n          </button>\n          \n          </div>\n          {/* </div> */}\n          \n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SelectRegionPage;\n","import React from \"react\";\nimport MainPage from \"./MainPage\";\nimport SuccessPage from './SuccessPage';\nimport SelectRegionPage from './components/SelectRegionPage';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./styles.css\";\nexport default class App extends React.Component {\n \n\n  render() {\n    return (\n    \n       <Router>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={SelectRegionPage} />\n            <Route exact path=\"/wheel/:region\" component={MainPage} />\n            <Route exact path=\"/success/:item\" component={SuccessPage} />\n          </Switch>\n        </div>\n      </Router>\n\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}